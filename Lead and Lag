

Player	Year	Runs
virat	2008	159
virat	2009	235
virat	2010	348
virat	2011	533
virat	2012	1020
virat	2013	1245
virat	2014	1212
virat	2015	743
virat	2016	323
virat	2017	124
virat	2018	457
virat	2019	423
virat	2020	687
virat	2021	103
virat	2022	146
rohit	2008	432
rohit	2009	173
rohit	2010	432
rohit	2011	478
rohit	2012	334
rohit	2013	1453
rohit	2014	1233
rohit	2015	1532
rohit	2016	532
rohit	2017	121
rohit	2018	105
rohit	2019	184
rohit	2020	423
rohit	2021	642
rohit	2022	674


_____________________________________________________________________________________________________________________
total runs scored by virat and rohit
select Player, sum(Runs)as runs from cricket group by Player; 


_____________________________________________________________________________________________________________________
which year scored what percentage runs

select Player, Year, Runs, round(Runs/ sum(Runs) over (partition by Player order by Year rows between
unbounded preceding and unbounded following)*100,0)percent from cricket;

_____________________________________________________________________________________________________________________

count of years in how years they scored runs less than previous years
if player scored less runs than the previous year so, we want to count that years

step by step process:
 * select Player, Year, Runs, lag(Runs) over(partition by Player order by Year)-Runs previous_year
from cricket
* select *, case when previous_year>0 then 1 else 0 end as more_runs from
(select Player, Year, Runs, lag(Runs) over(partition by Player order by Year)-Runs previous_year
from cricket) a

@# this is the final and exact output:

select Player, sum(more_runs) from
(select *, case when previous_year>0 then 1 else 0 end as more_runs from
(select Player, Year, Runs, lag(Runs) over(partition by Player order by Year)-Runs previous_year
from cricket) a) b group by Player;
_____________________________________________________________________________________________________________________
find the leading 
select Player, sum(more_runs) from
(select *, case when previous_year>0 then 1 else 0 end as more_runs from
(select Player, lead(Runs) over(partition by Player order by Year)-Runs previous_year
from cricket) a) b group by Player;


_____________________________________________________________________________________________________________________
count number of years in which rohit scored more than virat

##player name order wise la varathala namakku rohit mattum kedaikum
select Player, Year, Runs, lead(Runs) over(partition by year order by Player)runs_scored
from cricket;

##null values ahh remove pannita rohit oda values kedachirum
select * from
(select Player, Year, Runs, lead(Runs) over(partition by year order by Player)runs_scored
from cricket)a where runs_scored is not null;

#select *, runs_scored- Runs as leading_runs from
(select Player, Year, Runs, lead(Runs) over(partition by year order by Player)runs_scored
from cricket)a where runs_scored is not null;

#$#negative runs vanthu rohit virat ahh vida adhigama score adichirukka
select *, case when diff<0 then 1 else 0 end as diff_runs from
(select *, runs_scored- Runs as diff from
(select Player, Year, Runs, lead(Runs) over(partition by year order by Player)runs_scored
from cricket)a where runs_scored is not null) b;


select Player, sum(diff_runs) from
(select *, case when diff<0 then 1 else 0 end as diff_runs from
(select *, runs_scored- Runs as diff from
(select Player, Year, Runs, lead(Runs) over(partition by year order by Player)runs_scored
from cricket)a where runs_scored is not null) b)c group by Player;
_____________________________________________________________________________________________________________________
#prev_year<Runs<next_year
select Player, sum(increase) from
(select*, case when prev_year<Runs and Runs<next_year then 1 else 0 end as increase from
(select Player, Year, Runs, lag(Runs) over(partition by Player order by Year) prev_year,
lead(Runs) over (partition by Player order by Year) next_year
from cricket) a)b group by Player;

_____________________________________________________________________________________________________________________




_____________________________________________________________________________________________________________________



_____________________________________________________________________________________________________________________



_____________________________________________________________________________________________________________________



_____________________________________________________________________________________________________________________























































































































































































































